/*pseudo classes on btn*/

.btn{
    &:link,
    &:visited{
        text-transform: uppercase;
        text-decoration: none;
        padding: 15px 40px;
        display: inline-block;
        /*when btn is visited*/
        border-radius: 100px;
        transition: all .2s;
        position: relative;
        font-size: $default-font-size;
    }
    &:hover{
        transform:translateY(-3px);
        /*when the btn in hovered*/
        box-shadow: 0 5px 10px rgba(0,0,0,.2); /*  0 for x axis 10 for y and 20 for blur*/
    
    
        //nested hover::after
        &::after{
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    &:active{
        transform: translateY(-1px);
    }
    &-white{
        background-color:$primary-white;
        color:$primary-grey-dark;
    
        &::after{
            background-color:$primary-white;
        }
        
    }
    &-green{
        background-color:$color-primary;
        color:$primary-white;
    
        &::after{
            background-color:$color-primary;
        }
        
    }
    /*same element as before just visible after pseudo property. its treated as the child of the actual element */
    &::after{
        content:"";
        display:inline-block;
        height:100%;
        width:100%;
        border-radius: 100px;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition:all .4s;
        
    
    }
    
    
    
    
    &-animated{
        animation: moveInButton .5s ease-out .75s;
        animation-fill-mode: backwards; /*makes  the button invisible before the animation strarts*/
    }
    }

    .btn-text{
        &:link,
        &:visited{
            font-size: $default-font-size;
            color: $color-primary;
            display: inline-block;
            text-decoration: none;
            border-bottom: 1px solid $color-primary;
            padding: 3px;
            transition:all .2s;
        }
        &:hover{
            background-color: $color-primary;
            color: $primary-white;
            box-shadow: 0 1rem 20px  rgb(109, 105, 105);
            transform: translateY(-2px);
            border-radius: 1rem;


        }
        &:active{
            box-shadow: 0 .5rem 10px  rgb(109, 105, 105);
            transform: translateY(0px);
        }
    }

    //hint button in the card Game
    .hints-button{

        .pushable {
            background-color: brown;
            border-radius: 50px;
            border: none;
            padding: 0;
            cursor: pointer;
            outline-offset: 4px;
          }
          .front {
            display: block;
            padding: 12px 42px;
            border-radius: 50px;
            font-size: 1.25rem;
            background-color: rgb(133, 28, 28);
            color: white;
            transform: translateY(-6px);
          }
        
          .pushable:active .front {
            transform: translateY(-2px);
          }

    }
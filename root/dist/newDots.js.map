{"version":3,"sources":["webpack://root/webpack/bootstrap","webpack://root/webpack/runtime/make namespace object","webpack://root/./scripts/Games/ConnectDotsGame/newDots.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;UAAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACNmG;;AAEnG;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,8FAAU,CAAC;;AAE9B,0BAA0B,8FAAU;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU,sBAAsB;AAChC;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,mEAAmE;AACnE;AACA,uCAAuC;AACvC,wBAAwB;AACxB,6BAA6B;AAC7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,mBAAmB,e;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,C","file":"newDots.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import numberJson from \"../../../Assests/dotsGameResource/Newresource/AdjMat_JSON/numberJson.json\";\r\n\r\n//html elements\r\nconst canvas = document.getElementById(\"dotsCanvas\");\r\nconst downloadBtn = document.getElementById(\"downloadImg\");\r\nconst undoButton = document.getElementById(\"undoBtn\");\r\nconst hint = document.getElementById(\"hintText\");\r\nconst nextButton = document.getElementById(\"nextBtn\");\r\n\r\n\r\n//Game States\r\nlet text;\r\nlet actualObject;\r\nlet scaleofdevice = window.devicePixelRatio;\r\nlet restore_array = [];\r\nlet index = -1;\r\n\r\n\r\n\r\n//Canvas Information object\r\nvar data = {\r\n    canvas: null,\r\n    ctx: null,\r\n    clickedDot: null, //dot that was previously clicked--fromDot\r\n    dots: null,\r\n    is_drawing: false,\r\n    draw_color: \"blue\",\r\n    drawing_width: \"2\",\r\n};\r\n\r\n//Creating the array for the dots position\r\nfunction dotsIndex(arg) {\r\n    let dots = [];\r\n    let length = Object.keys(arg).length;\r\n    for (let i = 1; i <= length; i++) {\r\n        let indexElement = \"v\" + i.toString();\r\n        var width = (arg[indexElement].cx / 1920) * data.canvas.width,\r\n            height = (arg[indexElement].cy / 1080) * data.canvas.height;\r\n        let index = {\r\n            x: width,\r\n            y: height\r\n        };\r\n        dots.push(index);\r\n    }\r\n    return dots;\r\n}\r\n\r\n//initialize the dots\r\nfunction initilizeDots() {\r\n    let dotsNumber = Math.floor(Math.random() * 4);\r\n\r\n    actualObject = numberJson; //numberJson[dotsNumber];\r\n\r\n    data.dots = dotsIndex(numberJson[dotsNumber]);\r\n    text = dotsNumber;\r\n    \r\n}\r\n\r\n//Drawing Dots\r\nfunction drawDots() {\r\n    //draws the dots on the screen\r\n    var i = 0;\r\n    for (; i < data.dots.length; i++) {\r\n        //loop\r\n        var d = data.dots[i];\r\n        var width = (d.x/1920)*data.canvas.width;\r\n        var height = (d.y/1080)*data.canvas.height;\r\n        data.ctx.beginPath(); //begin a new path\r\n        data.ctx.arc(d.x, d.y, 15 / scaleofdevice, 0, 2 * Math.PI); //arc(x position, y position, radius, arc start, arc end) --full circumference of circle\r\n       // data.ctx.arc(width,height,15/scaleofdevice,0,2*Math.PI);\r\n        data.ctx.fillStyle = \"#ffb900\"; //grey color\r\n        data.ctx.fill(); //add fill to see on screen--set fillstyle\r\n        data.ctx.closePath(); //close the path\r\n    }\r\n    \r\n}\r\n\r\nfunction prepCanvas() {\r\n    //setup resolution and size of canvas\r\n    var res = window.devicePixelRatio || 1, //resolution\r\n        scale = 1 / res;\r\n    data.canvas = document.getElementById(\"dotCanvas\"); //dots canvas\r\n    data.ctx = data.canvas.getContext(\"2d\"); //context\r\n    \r\n    data.canvas.width = window.innerWidth - 60;\r\n    data.canvas.height = 645;\r\n    data.canvas.addEventListener(\"touchstart\", start, false);\r\n    data.canvas.addEventListener(\"touchmove\", draw, false);\r\n    data.canvas.addEventListener(\"mousedown\", start, false);\r\n    data.canvas.addEventListener(\"mousemove\", draw, false);\r\n\r\n    data.canvas.addEventListener(\"touchend\", stop, false);\r\n    data.canvas.addEventListener(\"mouseup\", stop, false);\r\n    data.canvas.addEventListener(\"mouseout\", stop, false);\r\n\r\n}\r\n\r\n//Drawing start event\r\nfunction start(event) {\r\n    data.is_drawing = true;\r\n    data.ctx.beginPath();\r\n    data.ctx.moveTo(\r\n        event.clientX - data.canvas.offsetLeft,\r\n        event.clientY - data.canvas.offsetTop\r\n    );\r\n\r\n    event.preventDefault();\r\n}\r\n\r\n//draw event\r\nfunction draw(event) {\r\n    if (data.is_drawing) {\r\n        data.ctx.lineTo(\r\n            event.clientX - data.canvas.offsetLeft,\r\n            event.clientY - data.canvas.offsetTop\r\n        );\r\n        data.ctx.strokeStyle = data.draw_color;\r\n        data.ctx.lineWidth = data.drawing_width;\r\n        data.ctx.lineCap = \"round\";\r\n        data.ctx.lineJoin = \"round\";\r\n        data.ctx.stroke();\r\n    }\r\n\r\n    event.preventDefault();\r\n}\r\n\r\n//Stop the drawing path\r\nfunction stop(event) {\r\n    if (data.is_drawing) {\r\n        data.ctx.stroke();\r\n        data.ctx.closePath();\r\n        data.is_drawing = false;\r\n    }\r\n    event.preventDefault();\r\n\r\n    if(event.type != 'mouseout'){\r\n        restore_array.push(data.ctx.getImageData(0, 0, data.canvas.width, data.canvas.height));\r\n         index+=1;\r\n    }\r\n    \r\n\r\n}\r\n\r\n//Change the color of the drAWING\r\ndocument.querySelectorAll(\".color-button\").forEach((item) => {\r\n    item.addEventListener(\"click\", (event) => {\r\n        data.draw_color = item.style.background;\r\n    });\r\n});\r\n//Change the color through the color picker\r\ndocument.querySelectorAll(\".color-picker\").forEach((item) => {\r\n    item.addEventListener(\"input\", (event) => {\r\n        console.log(item.value);\r\n        data.draw_color = item.value;\r\n    });\r\n});\r\n//change the size of the lines\r\ndocument.querySelectorAll(\".pen-range\").forEach((item) => {\r\n    item.addEventListener(\"input\", (event) => {\r\n        console.log(item.value);\r\n        data.drawing_width = item.value;\r\n    });\r\n});\r\n\r\n//Clear the canvas\r\n\r\ndocument.getElementById(\"clearCanvas\").addEventListener(\"click\", function () {\r\n    clearCanvas();\r\n});\r\n//clear canvas function\r\nfunction clearCanvas(){\r\n    data.ctx.fillStyle = \"rgb(73, 219, 85)\";\r\n    data.ctx.clearRect(0, 0, data.canvas.width, data.canvas.height);\r\n    data.ctx.fillRect(0, 0, data.canvas.width, data.canvas.height);\r\n    restore_array = [];\r\n    index =-1;\r\n    hint.innerHTML = \"\";\r\n\r\n}\r\n\r\n//Initializing \r\nprepCanvas();\r\n\r\n\r\n\r\n\r\n//download the image of  the canvas\r\n//only png\r\ndownloadBtn.addEventListener(\"click\", function () {\r\n    \r\n    if (window.navigator.msSaveBlob) {\r\n        window.navigator.msSaveBlob(data.canvas.msSaveBlob(), \"canvas-image.png\");\r\n    } else {\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.href = data.canvas.toDataURL();\r\n        a.download = \"canvas-image.png\";\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    }\r\n});\r\n\r\n//undo Functionality\r\nundoButton.addEventListener(\"click\", function () {\r\n    console.log(\"hello\");\r\n    if(index <= 0){clearCanvas();} \r\n    else{\r\n        index-= 1;\r\n        restore_array.pop();\r\n        data.ctx.putImageData(restore_array[index],0,0);\r\n    }\r\n});\r\n\r\n\r\n//functionality for drawing with dots\r\nnextButton.addEventListener(\"click\",function(){\r\n    nextButtonFunctionality();\r\n});\r\n\r\nfunction nextButtonFunctionality(){\r\n    clearCanvas();\r\n    initilizeDots();\r\n    drawDots();\r\n    showHint();\r\n    \r\n}\r\n\r\n//Hint\r\nfunction showHint(){\r\n    hint.innerHTML =text;\r\n\r\n}"],"sourceRoot":""}
(()=>{class t{constructor(){this.bgMusic=new Audio("../../Assests/Audio/creepy.mp3"),this.flipSound=new Audio("../../Assests/Audio/flip.wav"),this.matchSound=new Audio("../../Assests/Audio/match.wav"),this.victorySound=new Audio("../../Assests/Audio/victory.wav"),this.gameOverSound=new Audio("../../Assests/Audio/gameOver.wav"),this.bgMusic.volume=.5,this.bgMusic.loop=!0}startMusic(){this.bgMusic.play()}stopMusic(){this.bgMusic.pause(),this.bgMusic.currentTime=0}flip(){this.flipSound.play()}match(){this.matchSound.play()}victory(){this.stopMusic(),this.victorySound.play()}gameOver(){this.stopMusic(),this.gameOverSound.play()}}class s{constructor(s,e){this.cardsArray=e,this.totalTime=s,this.timeRemaining=s,this.timer=document.getElementById("time-remaining"),this.ticker=document.getElementById("flips"),this.cardScore=document.getElementById("score"),this.audioController=new t,this.score=0}startGame(){this.totalClicks=0,this.timeRemaining=this.totalTime,this.cardToCheck=null,this.matchedCards=[],this.busy=!0,setTimeout((()=>{this.audioController.startMusic(),this.shuffleCards(this.cardsArray),this.countdown=this.startCountdown(),this.busy=!1}),500),this.hideCards(),this.timer.innerText=this.timeRemaining,this.ticker.innerText=this.totalClicks}startCountdown(){return setInterval((()=>{this.timeRemaining--,this.timer.innerText=this.timeRemaining,0===this.timeRemaining&&this.gameOver()}),1e3)}gameOver(){clearInterval(this.countdown),this.audioController.gameOver(),document.getElementById("game-over-text").classList.add("visible")}victory(){clearInterval(this.countdown),this.audioController.victory(),document.getElementById("victory-text").classList.add("visible")}hideCards(){this.cardsArray.forEach((t=>{t.classList.remove("visible"),t.classList.remove("matched")}))}flipCard(t){this.canFlipCard(t)&&(this.audioController.flip(),this.totalClicks++,this.ticker.innerText=this.totalClicks,t.classList.add("visible"),this.cardToCheck?this.checkForCardMatch(t):this.cardToCheck=t)}checkForCardMatch(t){this.getCardType(t)===this.getCardType(this.cardToCheck)?(this.cardMatch(t,this.cardToCheck),this.score=this.score+10,this.cardScore.innerHTML=this.score):this.cardMismatch(t,this.cardToCheck),this.cardToCheck=null}cardMatch(t,s){this.matchedCards.push(t),this.matchedCards.push(s),t.classList.add("matched"),s.classList.add("matched"),t.classList.remove("hints"),s.classList.remove("hints"),this.audioController.match(),this.matchedCards.length===this.cardsArray.length&&this.victory()}cardMismatch(t,s){this.busy=!0,setTimeout((()=>{t.classList.remove("visible"),s.classList.remove("visible"),this.busy=!1}),1e3)}shuffleCards(t){for(let s=t.length-1;s>0;s--){let e=Math.floor(Math.random()*(s+1));t[e].style.order=s,t[s].style.order=e}}getCardType(t){return t.getElementsByClassName("memory-card-value")[0].src}canFlipCard(t){return!this.busy&&!this.matchedCards.includes(t)&&t!==this.cardToCheck}}function e(){let t=Array.from(document.getElementsByClassName("overlay-text")),e=Array.from(document.getElementsByClassName("memory-card")),i=new s(100,e);document.getElementById("hint-button").addEventListener("click",(()=>{Array.from(document.getElementsByClassName("hint")).forEach((t=>{t.classList.add("hints-memory-card")})),setTimeout((()=>{Array.from(document.getElementsByClassName("hints-memory-card")).forEach((t=>{t.classList.remove("hints-memory-card")}))}),5e3)})),t.forEach((t=>{t.addEventListener("click",(()=>{t.classList.remove("visible"),i.startGame()}))})),e.forEach((t=>{t.addEventListener("click",(()=>{i.flipCard(t)}))}))}"loading"==document.readyState?document.addEventListener("DOMContentLoaded",e):e()})();